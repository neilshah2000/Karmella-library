{"version":3,"sources":["views/pages/login/Login.js"],"names":["Login","useState","loginFailed","username","setUsername","password","setPassword","loggedIn","useSelector","state","login","dispatch","useDispatch","to","className","md","name","type","placeholder","autoComplete","onChange","e","target","value","xs","onClick","preventDefault","color","style","width","active","tabIndex"],"mappings":"gQA4GeA,UAtFD,WAAO,IAAD,EACsBC,oBAAS,GAD/B,mBACTC,EADS,aAEgBD,mBAAS,KAFzB,mBAETE,EAFS,KAECC,EAFD,OAGgBH,mBAAS,IAHzB,mBAGTI,EAHS,KAGCC,EAHD,KAIVC,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMH,YAC5CI,EAAWC,cAEjB,GAAIL,EACA,OAAO,kBAAC,IAAD,CAAUM,GAAG,gBAiBxB,OACI,yBAAKC,UAAU,sDACf,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMA,UAAU,0BAChB,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOD,UAAU,OACb,kBAAC,IAAD,KACA,kBAAC,IAAD,KACI,qCACA,uBAAGA,UAAU,cAAb,2BACA,kBAAC,IAAD,CAAaA,UAAU,QACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOE,KAAK,eAGhB,kBAAC,IAAD,CAAQC,KAAK,OAAOC,YAAY,WAAWC,aAAa,WAAWC,SA/BvF,SAA0BC,GACtBjB,EAAYiB,EAAEC,OAAOC,WAgCL,kBAAC,IAAD,CAAaT,UAAU,QACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOE,KAAK,sBAGhB,kBAAC,IAAD,CAAQC,KAAK,WAAWC,YAAY,WAAWC,aAAa,mBAAmBC,SAnCnG,SAA0BC,GACtBf,EAAYe,EAAEC,OAAOC,WAoCL,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAAC,IAAD,CAASC,QAnCjC,SAAsBJ,GAClBA,EAAEK,iBACFf,EAASD,YAAMP,EAAUE,KAiC2BsB,MAAM,UAAUb,UAAU,OAAOG,KAAK,UAAtE,UAEJ,kBAAC,IAAD,CAAMO,GAAG,IAAIV,UAAU,cACnB,kBAAC,IAAD,CAASa,MAAM,OAAOb,UAAU,QAAO,kBAAC,IAAD,CAAMD,GAAG,mBAAT,yBAK9CX,GAAe,kBAAC,IAAD,sBAIpB,kBAAC,IAAD,CAAOY,UAAU,4CAA4Cc,MAAO,CAAEC,MAAO,QACzE,kBAAC,IAAD,CAAWf,UAAU,eACrB,6BACI,uCACA,2JAEA,kBAAC,IAAD,CAAMD,GAAG,aACT,kBAAC,IAAD,CAASc,MAAM,UAAUb,UAAU,OAAOgB,QAAM,EAACC,UAAW,GAA5D","file":"static/js/5.6349e567.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardGroup,\n    CCol,\n    CContainer,\n    CForm,\n    CInput,\n    CInputGroup,\n    CInputGroupPrepend,\n    CInputGroupText,\n    CRow,\n    CCardFooter\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Redirect } from 'react-router-dom';\nimport { login } from './../../../state/login.actions'\n\nconst Login = () => {\n    const [loginFailed, setLoginFailed] = useState(false);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const loggedIn = useSelector(state => state.login.loggedIn)\n    const dispatch = useDispatch()\n\n    if (loggedIn) {\n        return <Redirect to='/bookSearch'/>\n    }\n\n    function onUsernameChange(e) {\n        setUsername(e.target.value);\n    }\n\n    function onPasswordChange(e) {\n        setPassword(e.target.value);\n    }\n\n    function loginClicked(e) {\n        e.preventDefault()\n        dispatch(login(username, password))\n    }\n\n\n    return (\n        <div className=\"c-app c-default-layout flex-row align-items-center\">\n        <CContainer>\n            <CRow className=\"justify-content-center\">\n            <CCol md=\"8\">\n                <CCardGroup>\n                <CCard className=\"p-4\">\n                    <CCardBody>\n                    <CForm >\n                        <h1>Login</h1>\n                        <p className=\"text-muted\">Sign In to your account</p>\n                        <CInputGroup className=\"mb-3\">\n                        <CInputGroupPrepend>\n                            <CInputGroupText>\n                            <CIcon name=\"cil-user\" />\n                            </CInputGroupText>\n                        </CInputGroupPrepend>\n                        <CInput type=\"text\" placeholder=\"Username\" autoComplete=\"username\" onChange={onUsernameChange}/>\n                        </CInputGroup>\n                        <CInputGroup className=\"mb-4\">\n                        <CInputGroupPrepend>\n                            <CInputGroupText>\n                            <CIcon name=\"cil-lock-locked\" />\n                            </CInputGroupText>\n                        </CInputGroupPrepend>\n                        <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" onChange={onPasswordChange}/>\n                        </CInputGroup>\n                        <CRow>\n                        <CCol xs=\"6\">\n                            <CButton onClick={loginClicked} color=\"primary\" className=\"px-4\" type='submit'>Login</CButton>\n                        </CCol>\n                        <CCol xs=\"6\" className=\"text-right\">\n                            <CButton color=\"link\" className=\"px-0\"><Link to=\"/passwordForgot\">Forgot password?</Link></CButton>\n                        </CCol>\n                        </CRow>\n                    </CForm>\n                    </CCardBody>\n                    {loginFailed && <CCardFooter>\n                        Login Failed\n                    </CCardFooter>}\n                </CCard>\n                <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                    <CCardBody className=\"text-center\">\n                    <div>\n                        <h2>Sign up</h2>\n                        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                        labore et dolore magna aliqua.</p>\n                        <Link to=\"/register\">\n                        <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\n                        </Link>\n                    </div>\n                    </CCardBody>\n                </CCard>\n                </CCardGroup>\n            </CCol>\n            </CRow>\n        </CContainer>\n        </div>\n    )\n}\n\nexport default Login\n"],"sourceRoot":""}