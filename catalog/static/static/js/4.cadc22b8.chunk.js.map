{"version":3,"sources":["assets/karmela.png","views/books/BookCard.js","views/books/BookSearch.js","state/shelf.selector.js","containers/BookSearch.container.js","views/books/AuthorList.js","services/book.service.js","views/books/BookEditCreate.js","views/basket/BasketItem.js","views/basket/CheckoutModal.js","views/basket/Basket.js","views/books/BorrowedBookCard.js","views/books/MyBorrowed.js","containers/Spinner.js","containers/Toast.js","views/books/PrivateRoute.js","containers/TheContent.js","containers/TheFooter.js","containers/TheHeader.js","containers/TheSidebar.js","containers/TheLayout.js"],"names":["module","exports","BookCard","props","dispatch","useDispatch","accentColor","book","title","author_names","className","copies","length","filter","copy","status","onClick","bookAddToBasket","BookSearch","searchButtonClicked","onSearchTextChange","inputText","onShelfSelected","selectedShelf","shelves","books","onBookUpdated","currentPage","pageCount","setCurrentPage","totalResults","sm","type","color","name","placeholder","onChange","value","row","md","htmlFor","xs","custom","id","map","shelf","key","updated","activePage","pages","onActivePageChange","getShelfDropDown","state","all","concat","BookSearchContainer","useState","searchTerm","setSearchTerm","setInputText","setSelectedShelf","rowsPerPage","setBookListUpdated","useEffect","shelfGetAll","bookGetSome","useSelector","searchResults","results","count","bookSearchProps","e","target","parseInt","console","log","Math","random","ceil","AuthorList","options","children","maxHeight","getValue","initialOffset","indexOf","height","itemCount","itemSize","initialScrollOffset","index","style","getBook","bookId","endpoint","axios","get","then","response","data","getAuthors","result","author","label","first_name","last_name","BookEditCreate","params","useParams","titleShort","isbn","callNumber","language","publisher","publisherPlace","issued","collectionTitle","place","abstract","bookFields","setBookFields","authors","setAuthors","selectedAuthors","setSelectedAuthors","onFormInputChange","field","myBook","JSON","parse","stringify","a","Promise","authorData","bookData","originalSelectedAuthors","myAuth","includes","components","MenuList","newSelected","isMulti","rows","size","auth","body","put","updateBook","res","post","createBook","BasketItem","onRemove","authorNames","CheckoutModal","show","onClose","onConfirm","closeButton","i","Date","now","Basket","showModal","showBasketModal","basketItems","basket","removeFromBasketClicked","bookRemoveFromBasket","checkoutModalProps","bookSetShowModal","bookInstances","forEach","push","bookCheckout","disabled","BorrowedBookCard","onBookReturned","join","MyBorrowed","bookGetBorrowed","myBorrowedBooks","borrowed","returnedBook","styles","zIndex","top","right","marginTop","marginRight","Spinner","spinner","role","Toast","toasts","position","toast","autohide","fade","PrivateRoute","Component","component","rest","loggedIn","login","render","to","pathname","from","location","loading","React","memo","fluid","fallback","exact","path","fixed","href","rel","TheHeader","sidebarShow","user","me","basketCount","withSubheader","inHeader","val","alt","email","shape","history","useHistory","onShowChange","src","logo","icon","logout","err","TheLayout"],"mappings":"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","file":"static/js/4.cadc22b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/karmela.41a4104d.png\";","import React from 'react';\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCardFooter,\n    CLink,\n} from '@coreui/react'\n// import { checkoutBook, reserveBook } from './../../services/book.service';\nimport { bookAddToBasket } from './../../state/book.actions'\nimport { useDispatch } from 'react-redux'\n\nconst BookCard = (props) => {\n    const dispatch = useDispatch()\n\n    // function checkoutClicked() {\n    //     const bookInstanceId = props.book.copies[0].id;\n    //     checkoutBook(bookInstanceId).then((data) => {\n    //         props.updated();\n    //         const newState = dispatch({type: 'add-toast', toast: data})\n    //     });\n    // }\n\n    // function reserveClicked() {\n    //     const bookInstanceId = props.book.copies[0].id;\n    //     reserveBook(bookInstanceId).then((data) => {\n    //         console.log(data);\n    //         props.updated();\n    //         const newState = dispatch({type: 'add-toast', toast: data})\n    //     });\n    // }\n\n    function addToBasketClicked() {\n        dispatch(bookAddToBasket(props.book))\n    }\n\n    function getCopiesCount() {\n        return props.book.copies.length;\n    }\n\n    function getAvailableCount() {\n        return props.book.copies.filter(copy => copy.status === 'Available').length;\n    }\n\n    return (\n        <CCard accentColor=\"primary\">\n            <CCardHeader>\n                <h5>{props.book.title}</h5>\n            </CCardHeader>\n            <CCardBody>\n                {props.book.author_names}\n            </CCardBody>\n            <CCardFooter>                \n                <div className=\"d-flex justify-content-between\">\n                    <div>\n                        <div>Copies: {getCopiesCount()}</div>\n                        <div>Available: {getAvailableCount()}</div>\n                    </div>\n                    <div>\n                        {/* <div><CLink onClick={checkoutClicked}>Checkout</CLink></div>\n                        <div><CLink onClick={reserveClicked}>Reserve</CLink></div> */}\n                        <div><CLink onClick={addToBasketClicked}>Add to Basket</CLink></div>\n                    </div>\n                </div> \n            </CCardFooter>\n        </CCard>\n    )\n}\n\nexport default BookCard","import React from 'react'\nimport {\n    CCol,\n    CRow,\n    CPagination,\n    CInput,\n    CInputGroup,\n    CInputGroupPrepend,\n    CButton,\n    CFormGroup,\n    CLabel,\n    CSelect\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport BookCard from './BookCard';\n\nconst BookSearch = ({ searchButtonClicked, onSearchTextChange, inputText, onShelfSelected, selectedShelf, shelves,\n    books, onBookUpdated, currentPage, pageCount, setCurrentPage, totalResults}) => {\n        \n    return (\n        <CRow>\n            <CCol>\n            <h2 className='mb-4'>Book Search</h2>\n                <CRow>\n                    <CCol sm='4'>\n                        <CInputGroup className={'mb-4'}>\n                            <CInputGroupPrepend>\n                                <CButton onClick={searchButtonClicked} type=\"button\" color=\"primary\"><CIcon name=\"cil-magnifying-glass\" /> Search</CButton>\n                            </CInputGroupPrepend>\n                            <CInput placeholder=\"Title or abstract\" onChange={onSearchTextChange} value={inputText}/>\n                        </CInputGroup>\n                    </CCol>\n                    <CCol sm='4'></CCol>\n                    <CCol sm='4'>\n                        <CFormGroup row>\n                            <CCol md=\"3\">\n                                <CLabel htmlFor=\"shelfSelect\" className='pt-1'>Shelf</CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"9\">\n                                <CSelect custom name=\"shelfSelect\" id=\"shelfSelect\" onChange={onShelfSelected} value={selectedShelf}>\n                                    {shelves.map((shelf) => {\n                                        return <option value={shelf.id} key={shelf.id}>{shelf.name}</option>\n                                    })}\n                                </CSelect>\n                            </CCol>\n                        </CFormGroup>\n                    </CCol>\n                </CRow>\n\n                <CRow>\n                    \n                    {books.map((book) => {\n                        return <CCol xs=\"12\" sm=\"6\" md=\"4\" key={book.id} >\n                            <BookCard book={book} updated={onBookUpdated}></BookCard>\n                        </CCol>\n                    })}\n\n                </CRow>\n\n                <CPagination\n                    activePage={currentPage}\n                    pages={pageCount}\n                    onActivePageChange={setCurrentPage} />\n                <span>{totalResults + ' results'}</span>\n            </CCol>\n        </CRow>\n    )\n}\n\nexport default BookSearch\n","export const getShelfDropDown = (state) => {\n    return state.shelf.all.concat([{\n            id: false,\n            name: ' -- select an option -- '\n        }\n    ])\n}","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport BookSearch from './../views/books/BookSearch';\nimport { shelfGetAll } from './../state/shelf.actions'\nimport { bookGetSome } from './../state/book.actions'\nimport { getShelfDropDown } from './../state/shelf.selector'\n\nconst BookSearchContainer = () => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchTerm, setSearchTerm] = useState(''); // search term that goes to back end\n    const [inputText, setInputText] = useState(''); // text in the search input\n    const [selectedShelf, setSelectedShelf] = useState(false);\n    const [rowsPerPage, setRowsPerPage] = useState(20);\n    const [bookListUpdated, setBookListUpdated] = useState(null) // used to trigger another book search api call when user does checkout, checkin or reserve\n\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(shelfGetAll())\n    }, [dispatch])\n    useEffect(() => {\n        dispatch(bookGetSome(currentPage, rowsPerPage, searchTerm, selectedShelf))\n    }, [dispatch, currentPage, rowsPerPage, searchTerm, selectedShelf])\n    const shelves = useSelector(getShelfDropDown)\n    const books = useSelector(state => state.books.searchResults.results)\n    const totalResults = useSelector(state => state.books.searchResults.count)\n\n\n    function searchButtonClicked() {\n        setSelectedShelf(false)\n        setSearchTerm(inputText);\n    }\n\n    function onShelfSelected(e) {\n        setInputText('');\n        setSelectedShelf(parseInt(e.target.value))\n    }\n\n    function onSearchTextChange(e) {\n        setInputText(e.target.value);\n    }\n\n    function onBookUpdated(){\n        console.log('bookupdated');\n        setBookListUpdated(Math.random());\n    }\n\n    const bookSearchProps = {\n        searchButtonClicked,\n        onSearchTextChange,\n        inputText,\n        onShelfSelected,\n        selectedShelf,\n        shelves,\n        books,\n        onBookUpdated,\n        currentPage,\n        pageCount: Math.ceil(totalResults / rowsPerPage),\n        setCurrentPage,\n        totalResults\n    }\n\n    return (\n        <BookSearch {...bookSearchProps}></BookSearch>\n    )\n}\n\nexport default BookSearchContainer","import React from 'react'\nimport { FixedSizeList as List } from \"react-window\";\n\nconst AuthorList =  (props) => {\n    const height = 35; // ??\n    const { options, children, maxHeight, getValue } = props;\n    const [value] = getValue();\n    const initialOffset = options.indexOf(value) * height;\n\n    return (\n        <List\n            height={maxHeight}\n            itemCount={children.length}\n            itemSize={height}\n            initialScrollOffset={initialOffset}>\n\n            {({ index, style }) => <div style={style}>{children[index]}</div>}\n\n        </List>\n    );\n}\n\nexport default AuthorList;","import { buildParams } from './helpers'\nimport axios from 'axios';\n\n\nfunction getBooks(params) {\n    let endpoint = '/catalog/api/books/';\n    endpoint = buildParams(endpoint, params);\n    return axios.get(endpoint)\n        .then(response => {return response.data})\n}\n\nfunction getBook(bookId) {\n    let endpoint = '/catalog/api/books/' + bookId;\n    return axios.get(endpoint)\n        .then(response => {return response.data})\n}\n\nfunction createBook(book) {\n    const endpoint = '/catalog/api/books/';\n    const body = JSON.stringify(book);\n    return axios.post(endpoint, body)\n        .then(response => {return response.data})\n}\n\nfunction updateBook(book) {\n    let endpoint = '/catalog/api/books/' + book.id + '/';\n    const body = JSON.stringify(book);\n    return axios.put(endpoint, body)\n        .then(response => {return response.data})\n}\n\nfunction getAuthors() {\n    let endpoint = '/catalog/api/authors/';\n    return axios.get(endpoint)\n        .then(response => {return response.data})\n        .then((result) => result.map((author) => { // add the fields needed for the select component\n            author.value = author.id;\n            author.key = author.id;\n            author.label = author.first_name + ' ' + author.last_name;\n            return author;\n        }));\n}\n\nfunction getShelves() {\n    let endpoint = '/catalog/api/shelves/';\n    return axios.get(endpoint)\n        .then(response => {return response.data})\n}\n\nfunction checkoutBook(bookInstanceId) {\n    let endpoint = '/catalog/api/copies/' + bookInstanceId + '/checkout/';\n    return axios.post(endpoint)\n        .then(response => {return response.data})\n}\n\nfunction reserveBook(bookInstanceId) {\n    let endpoint = '/catalog/api/copies/' + bookInstanceId + '/reserve/';\n    return axios.post(endpoint)\n        .then(response => {return response.data})\n}\n\nexport {\n    getBooks,\n    createBook,\n    getAuthors,\n    getBook,\n    updateBook,\n    getShelves,\n    checkoutBook,\n    reserveBook\n}","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport Select from 'react-select';\nimport AuthorList from './AuthorList';\nimport {\n    CFormGroup,\n    CLabel,\n    CTextarea,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CRow,\n    CInput,\n    CCardFooter,\n    CButton,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { createBook, updateBook, getAuthors, getBook } from '../../services/book.service';\n\nconst BookEditCreate = (props) => {\n    const params = useParams();\n    const emptyBook = {\n        title: '',\n        titleShort: '',\n        isbn: '',\n        callNumber: '',\n        language: '',\n        pages: '',\n        publisher: '',\n        publisherPlace: '',\n        issued: '',\n        collectionTitle: '',\n        place: '',\n        abstract: ''\n    }\n    const [bookFields, setBookFields] = useState(emptyBook);\n    const [authors, setAuthors] = useState([]);\n    const [selectedAuthors, setSelectedAuthors] = useState([]);\n\n    useEffect(() => {\n        (async function getData(){\n            if (params.id) {\n                let [authorData, bookData] = await Promise.all([getAuthors(), getBook(params.id)]);\n                setBookFields(bookData);\n                setAuthors(authorData);\n                const originalSelectedAuthors = authorData.filter((myAuth) => {\n                    return bookData.author.includes(myAuth.id);\n                })\n                setSelectedAuthors(originalSelectedAuthors);\n            } else {\n                const authorData = await getAuthors();\n                setAuthors(authorData);\n            }\n        })();\n    }, [params]);\n\n    function onAuthorSelectChange(newSelected) {\n        setSelectedAuthors(newSelected);\n    }\n\n    function onFormInputChange(e) {\n        const field = e.target.id;\n        const value = e.target.value;\n        let myBook = JSON.parse(JSON.stringify(bookFields))\n        myBook[field] = value;\n        setBookFields(myBook);\n    }\n\n    function bookSubmitClicked() {\n        bookFields.author = selectedAuthors.map((auth) => {\n            return auth.key;\n        });\n        if(params.id) {\n            updateBook(bookFields).then((res) => {\n                console.log(res);\n            });\n        } else {\n            createBook(bookFields).then((res) => {\n                console.log(res);\n            })\n        }\n    }\n\n    function test() {\n        console.log('test')\n    }\n\n    return (\n        <>\n        <CRow>\n            <CCol>\n                <h2 className='mb-4'>Create Book</h2>\n                <CFormGroup>\n                    <CLabel htmlFor=\"title\">Authors</CLabel>\n                    <Select\n                        components={{ MenuList: AuthorList }}\n                        onChange={onAuthorSelectChange}\n                        value={selectedAuthors}\n                        options={authors}\n                        isMulti={true}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"title\">Title</CLabel>\n                    <CInput id=\"title\" placeholder=\"Book title\" onChange={onFormInputChange} value={bookFields.title || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"titleShort\">Short Title</CLabel>\n                    <CInput id=\"titleShort\" placeholder=\"Short title\" onChange={onFormInputChange} value={bookFields.titleShort || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"isbn\">ISBN</CLabel>\n                    <CInput id=\"isbn\" placeholder=\"978-1-86197-876-9\" onChange={onFormInputChange} value={bookFields.isbn || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"callNumber\">Call Number</CLabel>\n                    <CInput id=\"callNumber\" placeholder=\"\" onChange={onFormInputChange} value={bookFields.callNumber || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"language\">Language</CLabel>\n                    <CInput id=\"language\" placeholder=\"es\" onChange={onFormInputChange} value={bookFields.language || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"pages\">Pages</CLabel>\n                    <CInput id=\"pages\" placeholder=\"\" onChange={onFormInputChange} value={bookFields.pages || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"publisher\">Publisher</CLabel>\n                    <CInput id=\"publisher\" placeholder=\"\" onChange={onFormInputChange} value={bookFields.publisher || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"publisherPlace\">Publisher Place</CLabel>\n                    <CInput id=\"publisherPlace\" placeholder=\"\" onChange={onFormInputChange} value={bookFields.publisherPlace || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"issued\">Issued</CLabel>\n                    <CInput id=\"issued\" placeholder=\"\" onChange={onFormInputChange} value={bookFields.issued || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"collectionTitle\">Collection Title</CLabel>\n                    <CInput id=\"collectionTitle\" placeholder=\"\" onChange={onFormInputChange} value={bookFields.collectionTitle || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"place\">Place</CLabel>\n                    <CInput id=\"place\" placeholder=\"\" onChange={onFormInputChange} value={bookFields.place || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"abstract\">Abstract</CLabel>\n                    <CTextarea \n                        name=\"abstract\" \n                        id=\"abstract\" \n                        rows=\"10\"\n                        placeholder=\"Content...\" onChange={onFormInputChange} value={bookFields.abstract || ''}/>\n                </CFormGroup>\n            </CCol>\n        </CRow>\n        <CRow>\n            <CCol>\n                <span className='mr-2'>\n                    <CButton type=\"submit\" size=\"sm\" color=\"primary\"  onClick={bookSubmitClicked}>\n                        <CIcon name=\"cil-scrubber\"/> Submit\n                    </CButton>\n                </span>\n                <CButton type=\"reset\" size=\"sm\" color=\"danger\" onClick={test}>\n                    <CIcon name=\"cil-ban\"/> Reset\n                </CButton>\n            </CCol>\n        </CRow>\n        </>\n    )\n}\n\nexport default BookEditCreate\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport {\n    CCard,\n    CCardFooter,\n    CCardHeader,\n    CCardBody,\n    CLink\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\n\nconst BasketItem = ({book, onRemove}) => {\n\n    const removeFromBasketClicked = () => {\n        onRemove(book)\n    }\n\n    return (\n        <CCard accentColor=\"success\">\n            <CCardHeader>\n                <h5>{book.title}</h5>\n            </CCardHeader>\n            <CCardBody>\n                {book.authorNames}\n            </CCardBody>\n            <CCardFooter>                \n                <CLink onClick={removeFromBasketClicked}>Remove</CLink>\n            </CCardFooter>\n        </CCard>\n    )\n}\n\nexport default BasketItem\n","import React from 'react'\n\n\nimport {\n    CModal,\n    CModalHeader,\n    CModalBody,\n    CModalFooter,\n    CListGroup,\n    CListGroupItem,\n    CButton\n} from '@coreui/react'\n\nconst CheckoutModal = ({ show, onClose, books, onConfirm }) => {\n\n\n    return (\n        <CModal show={show} onClose={onClose}>\n            <CModalHeader closeButton>Checkout</CModalHeader>\n            <CModalBody>\n\n                {books.map((book,i) => (\n                    <CListGroup key={i}>\n                        <CListGroupItem>\n                            <h5>{book.title}</h5>\n                            <div>\n                                {Date.now()}\n                            </div>\n                        </CListGroupItem>\n                    </CListGroup>\n                ))}\n\n            </CModalBody>\n            <CModalFooter>\n                <CButton onClick={onConfirm} color=\"primary\">Confirm Checkout</CButton>\n                <CButton color=\"secondary\" onClick={onClose}>Cancel</CButton>\n            </CModalFooter>\n        </CModal>\n    )\n}\n\nexport default CheckoutModal\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n    CCol,\n    CRow,\n    CButton,\n    CFormGroup,\n    CLabel,\n    CSelect, CListGroup, CListGroupItem, CLink\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport BasketItem from './BasketItem'\nimport { bookRemoveFromBasket, bookCheckout, bookSetShowModal } from './../../state/book.actions'\nimport CheckoutModal from './CheckoutModal'\n\n\nconst Basket = () => {\n    const showModal = useSelector(state => state.books.showBasketModal)\n    const dispatch = useDispatch()\n    const basketItems = useSelector(state => state.books.basket)\n\n    const removeFromBasketClicked = (book) => {\n        console.log(book)\n        dispatch(bookRemoveFromBasket(book))\n    }\n\n    const onClose = () => {\n        dispatch(bookSetShowModal(false))\n    }\n\n    const onCheckoutClicked = () => {\n        dispatch(bookSetShowModal(true))\n    }\n\n    const onConfirmCheckout = () => {\n        const bookInstances = []\n        basketItems.forEach(book => {\n            if (book.copies.length > 0) {\n                bookInstances.push(book.copies[0])\n            }\n        })\n        dispatch(bookCheckout(bookInstances))\n    }\n\n    const checkoutModalProps = {\n        show: showModal,\n        onClose,\n        books: basketItems,\n        onConfirm: onConfirmCheckout\n    }\n\n    return (\n        <CRow>\n            <CCol>\n                <div className='d-flex justify-content-between mb-2'>\n                    <div className='mb-4'>Basket</div>\n                    <CButton onClick={onCheckoutClicked} type=\"button\" color=\"primary\" disabled={basketItems.length === 0}>Checkout</CButton>\n                </div>\n                <CRow>\n                    \n                    {basketItems.map((book,i) => {\n                        return <CCol xs=\"12\" sm=\"6\" md=\"4\" key={i} >\n                            <BasketItem book={book} onRemove={removeFromBasketClicked}></BasketItem>\n                        </CCol>\n                    })}\n\n                </CRow>\n                {basketItems.length === 0 && <CRow>\n                    Basket is empty\n                </CRow>}\n\n                <CheckoutModal {...checkoutModalProps}></CheckoutModal>\n            </CCol>\n        </CRow>\n    )\n}\n\nexport default Basket\n","import React from 'react';\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCardFooter,\n    CLink,\n} from '@coreui/react'\n// import { checkoutBook, reserveBook } from './../../services/book.service';\nimport { bookAddToBasket } from '../../state/book.actions'\nimport { useDispatch } from 'react-redux'\n\nconst BorrowedBookCard = ({ book, onBookReturned }) => {\n    const authorNames = book.book.author\n                            .map(author => author.first_name + ' ' + author.last_name)\n                            .join(', ')\n    return (\n        <CCard accentColor=\"primary\">\n            <CCardHeader>\n                <h5>{book.book.title}</h5>\n            </CCardHeader>\n            <CCardBody>\n                {authorNames}\n            </CCardBody>\n            <CCardFooter>                \n                <CLink onClick={() => onBookReturned(book)}>Return</CLink>\n            </CCardFooter>\n        </CCard>\n    )\n}\n\nexport default BorrowedBookCard","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bookGetBorrowed } from './../../state/book.actions'\nimport BorrowedBookCard from './BorrowedBookCard'\nimport {\n    CCol,\n    CRow,\n} from '@coreui/react'\n\nconst MyBorrowed =  () => {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(bookGetBorrowed())\n    }, [dispatch])\n    const myBorrowedBooks =  useSelector(state => state.books.borrowed)\n\n    console.log(myBorrowedBooks)\n\n    const onBookReturned = (returnedBook) => {\n        console.log(returnedBook)\n    }\n\n    return (\n        <>\n            <div>My Borrowed</div>\n            <CRow>\n                {myBorrowedBooks.map((book) => {\n                    return <CCol xs=\"12\" sm=\"6\" md=\"4\" key={book.id} >\n                        <BorrowedBookCard book={book} onBookReturned={onBookReturned}></BorrowedBookCard>\n                    </CCol>\n                })}\n            </CRow>\n        </>\n    );\n}\n\nexport default MyBorrowed;","import React from 'react';\nimport { useSelector } from 'react-redux'\nconst styles = {\n    zIndex: 9,\n    top: '50%',\n    right: '50%',\n    marginTop: -16,\n    marginRight: -16\n}\n\nconst Spinner = () => {\n    const spinner = useSelector(state => state.spinner)\n    console.log(spinner)\n\n    return <>\n        {spinner > 0 &&\n            <div className=\"spinner-border text-primary position-fixed d-block\" style={styles} role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        }\n    </>\n}\n\nexport default Spinner;","import React from 'react';\nimport {\n    CToaster,\n    CToast,\n    CToastHeader,\n    CToastBody\n} from '@coreui/react';\nimport { useSelector } from 'react-redux'\n\nconst Toast = (props) => {\n    const toasts = useSelector(state => state.toasts.all)\n    console.log(toasts)\n\n    return (\n        <>\n            <CToaster position='bottom-right'>\n                {toasts.map((toast, key) => {\n                    return <CToast\n                        key={'toast' + key}\n                        show={true}\n                        autohide={5000}\n                        fade={true}>\n                        <CToastHeader >\n                            Toast title\n                        </CToastHeader>\n                        <CToastBody>\n                            {toast.status}\n                        </CToastBody>\n                    </CToast>\n                })}\n            </CToaster>\n        </>\n    )\n}\n\nexport default Toast;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n    console.log(Component)\n    const loggedIn = useSelector(state => state.login.loggedIn)\n    return (\n        <Route {...rest} render={props => (\n            loggedIn\n                ? <Component {...props} />\n                : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )} />\n    )\n}\n\nexport default PrivateRoute","import React, { Suspense } from 'react'\nimport {\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { CContainer, CFade } from '@coreui/react'\nimport BookSearchContainer from './BookSearch.container'\nimport BookEditCreate from './../views/books/BookEditCreate'\nimport Basket from './../views/basket/Basket'\nimport MyBorrowed from './../views/books/MyBorrowed'\nimport Spinner from './Spinner';\nimport Toast from './Toast';\nimport PrivateRoute from './../views/books/PrivateRoute';\n  \nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\nconst TheContent = () => {\n  return (\n    <main className=\"c-main\">\n      <CContainer fluid>\n        <Toast></Toast>\n        <Spinner></Spinner>\n        <Suspense fallback={loading}>\n          <Switch>\n            <PrivateRoute exact path=\"/bookSearch\" name=\"Book Search\" component={BookSearchContainer} />\n            <PrivateRoute exact path=\"/book\" name=\"Book Create\" component={BookEditCreate} />\n            <PrivateRoute exact path=\"/bookEdit/:id\" name=\"Book Detail\" component={BookEditCreate} />\n            <PrivateRoute exact path=\"/basket\" name=\"Basket\" component={Basket} />\n            <PrivateRoute exact path=\"/myBorrowed\" name=\"My Borrowed\" component={MyBorrowed} />\n            <Redirect from=\"/\" to=\"/bookSearch\" />\n          </Switch>\n        </Suspense>\n      </CContainer>\n    </main>\n  )\n}\n\nexport default React.memo(TheContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst TheFooter = () => {\n  return (\n    <CFooter fixed={false}>\n      <div>\n        <a href=\"https://coreui.io\" target=\"_blank\" rel=\"noopener noreferrer\">CoreUI</a>\n        <span className=\"ml-1\">&copy; 2020 creativeLabs.</span>\n      </div>\n      <div className=\"mfs-auto\">\n        <span className=\"mr-1\">Powered by</span>\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">CoreUI for React</a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(TheFooter)\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CHeader,\n  CToggler,\n  CHeaderBrand,\n  CHeaderNav,\n  CBadge,\n  CLink\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\n\nimport { \n  TheHeaderDropdown,\n  TheHeaderDropdownMssg,\n  TheHeaderDropdownNotif,\n  TheHeaderDropdownTasks\n}  from './index'\n\nconst TheHeader = () => {\n    const dispatch = useDispatch()\n    const sidebarShow = useSelector(state => state.sidebarShow)\n    const user = useSelector(state => state.user.me)\n    const basketCount = useSelector(state => state.books.basket.length)\n\n    const toggleSidebar = () => {\n        const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\n        dispatch({type: 'set', sidebarShow: val})\n    }\n\n    const toggleSidebarMobile = () => {\n        const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\n        dispatch({type: 'set', sidebarShow: val})\n    }\n\n    return (\n        <CHeader withSubheader>\n            <CToggler\n                inHeader\n                className=\"ml-md-3 d-lg-none\"\n                onClick={toggleSidebarMobile}\n            />\n            <CToggler\n                inHeader\n                className=\"ml-3 d-md-down-none\"\n                onClick={toggleSidebar}\n            />\n            <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\n                <CIcon name=\"logo\" height=\"48\" alt=\"Logo\"/>\n            </CHeaderBrand>\n\n            {/* CSS in this section pushes email and basket icon bellow to the right */}\n            <CHeaderNav className=\"d-md-down-none mr-auto\">\n            </CHeaderNav>\n\n            {user && user.email && \n                <CHeaderNav className=\"mr-5\">{user.email}</CHeaderNav>}\n\n            <CHeaderNav className=\"mr-5\">\n                <CLink to='/basket'>\n                    <CIcon name=\"cil-basket\"/>\n                    <CBadge shape=\"pill\" color=\"danger\">{basketCount}</CBadge>\n                </CLink>\n            </CHeaderNav>\n            \n        </CHeader>\n    )\n}\n\nexport default TheHeader\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CSidebarMinimizer,\n  CSidebarNavDropdown,\n  CSidebarNavItem,\n  CImg\n} from '@coreui/react'\n\nimport logo from './../assets/karmela.png'\nimport { logout } from './../services/login.service';\nimport { useHistory } from \"react-router-dom\";\n\n// sidebar nav config\nimport navigation from './_nav'\n\nconst TheSidebar = () => {\n    const dispatch = useDispatch()\n    const show = useSelector(state => state.sidebarShow)\n    let history = useHistory();\n\n    function logoutClicked(){\n        logout().then((res) => {\n            console.log(res);\n            history.push('/login');\n        }, (err) => {console.log(err)});\n    }\n\n    return (\n        <CSidebar\n        show={show}\n        onShowChange={(val) => dispatch({type: 'set', sidebarShow: val })}\n        >\n        <CSidebarBrand className=\"d-md-down-none white\" to=\"/\">\n            {/* <CIcon\n            className=\"c-sidebar-brand-full\"\n            name=\"logo-negative\"\n            height={35}\n            />\n            <CIcon\n            className=\"c-sidebar-brand-minimized\"\n            name=\"sygnet\"\n            height={35}\n            /> */}\n            <CImg\n                src={logo}\n                className=\"c-sidebar-brand-full logo\"\n                alt=\"admin@bootstrapmaster.com\"/>\n        </CSidebarBrand>\n        <CSidebarNav>\n            <CSidebarNavItem name='Search' to='/bookSearch' icon='cil-search'></CSidebarNavItem>\n            {/* <CSidebarNavItem name='Book' to='/book' icon='cil-book'></CSidebarNavItem> */}\n            <CSidebarNavItem name='Basket' to='/basket' icon='cil-basket'></CSidebarNavItem>\n            <CSidebarNavItem name='My Borrowed' to='/myBorrowed' icon='cil-book'></CSidebarNavItem>\n            <CSidebarNavItem name='Logout' onClick={logoutClicked} icon='cil-account-logout'></CSidebarNavItem>\n            {/* <CCreateElement\n            items={navigation}\n            components={{\n                CSidebarNavDivider,\n                CSidebarNavDropdown,\n                CSidebarNavItem,\n                CSidebarNavTitle\n            }}\n            /> */}\n        </CSidebarNav>\n        <CSidebarMinimizer className=\"c-d-md-down-none\"/>\n        </CSidebar>\n    )\n}\n\nexport default React.memo(TheSidebar)\n","import React from 'react'\nimport {\n  TheContent,\n  TheSidebar,\n  TheFooter,\n  TheHeader\n} from './index'\n\nconst TheLayout = () => {\n\n  return (\n    <div className=\"c-app c-default-layout\">\n      <TheSidebar/>\n      <div className=\"c-wrapper\">\n        <TheHeader/>\n        <div className=\"c-body\">\n          <TheContent/>\n        </div>\n        <TheFooter/>\n      </div>\n    </div>\n  )\n}\n\nexport default TheLayout\n"],"sourceRoot":""}