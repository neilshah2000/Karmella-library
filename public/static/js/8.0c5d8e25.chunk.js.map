{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/pages/register/PasswordForgot.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","PasswordForgot","match","useState","success","setSuccess","email","setEmail","className","md","lg","xl","name","type","placeholder","onChange","e","target","onClick","passwordForgot","then","console","error","color","block"],"mappings":"2NAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,gGI4DvFC,UA9CQ,SAAC,GAAY,EAAXC,MAAY,IAAD,EACFC,oBAAS,GADP,mBACzBC,EADyB,KAChBC,EADgB,OAENF,mBAAS,IAFH,mBAEzBG,EAFyB,KAElBC,EAFkB,KAchC,OACI,yBAAKC,UAAU,sDACf,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMA,UAAU,0BACZ,kBAAC,IAAD,CAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACnB,kBAAC,IAAD,CAAOH,UAAU,QACb,kBAAC,IAAD,KAAa,gDACb,kBAAC,IAAD,CAAWA,UAAU,OACjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAaA,UAAU,QACnB,kBAAC,IAAD,KACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOI,KAAK,eAGhB,kBAAC,IAAD,CAAQC,KAAK,OAAOC,YAAY,QAAQC,SAzBxE,SAAuBC,GACnBT,EAASS,EAAEC,OAAOrB,WA2BM,kBAAC,IAAD,CAASsB,QAxBrC,WACIC,YAAeb,GAAOc,MAAK,WACvBf,GAAW,KACZgB,QAAQC,QAqBmDC,MAAM,UAAUC,OAAK,GAA3D,sBAGPpB,GAAW,kBAAC,IAAD","file":"static/js/8.0c5d8e25.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useState, useEffect} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { passwordForgot } from './../../../services/login.service';\n\nconst PasswordForgot = ({match}) => {\n    const [success, setSuccess] = useState(false)\n    const [email, setEmail] = useState('')\n\n    function onEmailChange(e) {\n        setEmail(e.target.value);\n    }\n\n    function onSendEmailClicked() {\n        passwordForgot(email).then(() => {\n            setSuccess(true)\n        }, console.error)\n    }\n    \n    return (\n        <div className=\"c-app c-default-layout flex-row align-items-center\">\n        <CContainer>\n            <CRow className=\"justify-content-center\">\n                <CCol md=\"9\" lg=\"7\" xl=\"6\">\n                    <CCard className=\"mx-4\">\n                        <CCardHeader><h1>Forgot Password</h1></CCardHeader>\n                        <CCardBody className=\"p-4\">\n                            <CForm>\n                                <CInputGroup className=\"mb-3\">\n                                    <CInputGroupPrepend>\n                                    <CInputGroupText>\n                                        <CIcon name=\"cil-user\" />\n                                    </CInputGroupText>\n                                    </CInputGroupPrepend>\n                                    <CInput type=\"text\" placeholder=\"Email\" onChange={onEmailChange}/>\n                                </CInputGroup>\n                                \n                                <CButton onClick={onSendEmailClicked} color=\"success\" block>Send Reset Email</CButton>\n                            </CForm>\n                        </CCardBody>\n                        {success && <CCardFooter>\n                            Email sent\n                        </CCardFooter>}\n                    </CCard>\n                </CCol>\n            </CRow>\n        </CContainer>\n        </div>\n    )\n}\n\nexport default PasswordForgot\n"],"sourceRoot":""}