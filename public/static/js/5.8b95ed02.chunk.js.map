{"version":3,"sources":["assets/karmela.png","services/book.service.js","services/helpers.js","services/useBookFetch.js","views/books/BookCard.js","views/books/BookSearch.js","views/books/AuthorList.js","views/books/BookEditCreate.js","containers/Spinner.js","containers/Toast.js","views/books/PrivateRoute.js","containers/TheContent.js","containers/TheFooter.js","containers/TheHeader.js","containers/TheSidebar.js","containers/TheLayout.js"],"names":["module","exports","getBooks","params","endpoint","url","window","location","origin","console","log","builtUrl","URL","Object","keys","forEach","key","searchParams","append","buildParams","axios","get","then","response","data","getBook","bookId","getAuthors","result","map","author","value","id","label","first_name","last_name","BookCard","props","dispatch","useDispatch","accentColor","book","title","author_names","className","copies","length","filter","copy","status","onClick","bookInstanceId","post","checkoutBook","updated","type","toast","reserveBook","BookSearch","useState","currentPage","setCurrentPage","searchTerm","setSearchTerm","inputText","setInputText","shelves","setShelves","selectedShelf","setSelectedShelf","rowsPerPage","bookListUpdated","setBookListUpdated","shelf","setData","totalResults","setTotalResults","pageCount","setPageCount","makePretty","authorNames","join","useEffect","a","limit","offset","search","results","count","Math","ceil","useBookFetch","books","onBookUpdated","random","push","name","sm","color","placeholder","onChange","e","target","row","md","htmlFor","xs","custom","parseInt","logUserOut","activePage","pages","onActivePageChange","AuthorList","options","children","maxHeight","getValue","initialOffset","indexOf","height","itemCount","itemSize","initialScrollOffset","index","style","BookEditCreate","useParams","titleShort","isbn","callNumber","language","publisher","publisherPlace","issued","collectionTitle","place","abstract","bookFields","setBookFields","authors","setAuthors","selectedAuthors","setSelectedAuthors","onFormInputChange","field","myBook","JSON","parse","stringify","Promise","all","authorData","bookData","originalSelectedAuthors","myAuth","includes","components","MenuList","newSelected","isMulti","rows","size","auth","body","put","updateBook","res","createBook","styles","zIndex","top","right","marginTop","marginRight","Spinner","spinner","useSelector","state","role","Toast","toasts","position","show","autohide","fade","PrivateRoute","Component","component","rest","render","isLoggedIn","to","pathname","from","loading","React","memo","fluid","fallback","exact","path","fixed","href","rel","TheHeader","sidebarShow","user","withSubheader","inHeader","val","alt","email","history","useHistory","onShowChange","src","logo","icon","logout","err","TheLayout"],"mappings":"+JAAAA,EAAOC,QAAU,IAA0B,qC,+ICI3C,SAASC,EAASC,GACd,IAAIC,EAAW,sBAEf,OADAA,ECNJ,SAAqBA,EAAUD,GAC3B,IAAME,EAAMC,OAAOC,SAASC,OAASJ,EACrCK,QAAQC,IAAIL,GACZ,IAAIM,EAAW,IAAIC,IAAIP,GAIvB,OAHAQ,OAAOC,KAAKX,GAAQY,SAAQ,SAACC,GACzBL,EAASM,aAAaC,OAAOF,EAAKb,EAAOa,OAEtCL,EDDIQ,CAAYf,EAAUD,GAC1BiB,IAAMC,IAAIjB,GACZkB,MAAK,SAAAC,GAAa,OAAOA,EAASC,QAG3C,SAASC,EAAQC,GACb,IAAItB,EAAW,sBAAwBsB,EACvC,OAAON,IAAMC,IAAIjB,GACZkB,MAAK,SAAAC,GAAa,OAAOA,EAASC,QAiB3C,SAASG,IAEL,OAAOP,IAAMC,IADE,yBAEVC,MAAK,SAAAC,GAAa,OAAOA,EAASC,QAClCF,MAAK,SAACM,GAAD,OAAYA,EAAOC,KAAI,SAACC,GAI1B,OAHAA,EAAOC,MAAQD,EAAOE,GACtBF,EAAOd,IAAMc,EAAOE,GACpBF,EAAOG,MAAQH,EAAOI,WAAa,IAAMJ,EAAOK,UACzCL,QEpCnB,I,SC4DeM,EApDE,SAACC,GACd,IAAMC,EAAWC,cA2BjB,OACI,kBAAC,IAAD,CAAOC,YAAY,WACf,kBAAC,IAAD,KACI,4BAAKH,EAAMI,KAAKC,QAEpB,kBAAC,IAAD,KACKL,EAAMI,KAAKE,cAEhB,kBAAC,IAAD,KACI,yBAAKC,UAAU,kCACX,6BACI,wCAlBTP,EAAMI,KAAKI,OAAOC,QAmBT,2CAfTT,EAAMI,KAAKI,OAAOE,QAAO,SAAAC,GAAI,MAAoB,cAAhBA,EAAKC,UAAwBH,SAiBzD,6BACI,6BAAK,kBAAC,IAAD,CAAOI,QAxChC,YHmCJ,SAAsBC,GAClB,IAAI/C,EAAW,uBAAyB+C,EAAiB,aACzD,OAAO/B,IAAMgC,KAAKhD,GACbkB,MAAK,SAAAC,GAAa,OAAOA,EAASC,SGpCnC6B,CADuBhB,EAAMI,KAAKI,OAAO,GAAGb,IACfV,MAAK,SAACE,GAC/Ba,EAAMiB,UACWhB,EAAS,CAACiB,KAAM,YAAaC,MAAOhC,SAoCpC,aACL,6BAAK,kBAAC,IAAD,CAAO0B,QAjChC,YHiCJ,SAAqBC,GACjB,IAAI/C,EAAW,uBAAyB+C,EAAiB,YACzD,OAAO/B,IAAMgC,KAAKhD,GACbkB,MAAK,SAAAC,GAAa,OAAOA,EAASC,SGlCnCiC,CADuBpB,EAAMI,KAAKI,OAAO,GAAGb,IAChBV,MAAK,SAACE,GAC9Bf,QAAQC,IAAIc,GACZa,EAAMiB,UACWhB,EAAS,CAACiB,KAAM,YAAaC,MAAOhC,SA4BpC,iB,QC8DdkC,EA/FI,WAAO,IAAD,EACiBC,mBAAS,GAD1B,mBACdC,EADc,KACDC,EADC,OAEeF,mBAAS,IAFxB,mBAEdG,EAFc,KAEFC,EAFE,OAGaJ,mBAAS,IAHtB,mBAGdK,EAHc,KAGHC,EAHG,OAISN,mBAAS,IAJlB,mBAIdO,EAJc,KAILC,EAJK,OAKqBR,oBAAS,GAL9B,mBAKdS,EALc,KAKCC,EALD,OAMiBV,mBAAS,IAN1B,mBAMdW,EANc,aAOyBX,mBAAS,OAPlC,mBAOdY,EAPc,KAOGC,EAPH,OFnBJ,SAACZ,EAAaU,EAAaR,EAAYW,EAAOF,GAAqB,IAAD,EAC3DZ,mBAAS,IADkD,mBAC5EnC,EAD4E,KACtEkD,EADsE,OAE3Cf,mBAAS,GAFkC,mBAE5EgB,EAF4E,KAE9DC,EAF8D,OAGjDjB,mBAAS,GAHwC,mBAG5EkB,EAH4E,KAGjEC,EAHiE,KAKnF,SAASC,EAAWtC,GAChB,IAAMuC,EAAcvC,EAAKE,aAAasC,KAAK,MAE3C,OADAxC,EAAKuC,YAAcA,EACZvC,EAuBX,OApBAyC,qBAAU,YACN,uCAAC,8BAAAC,EAAA,6DACShF,EAAS,CACXiF,MAAOd,EACPe,OAASf,EAAcV,EAAeU,GAIrCG,EAGDtE,EAAOsE,MAAQA,EAFftE,EAAOmF,OAASxB,EARvB,SAYwB5D,EAASC,GAZjC,OAYSyB,EAZT,OAaG8C,EAAQ9C,EAAO2D,QAAQ1D,IAAIkD,IAC3BH,EAAgBhD,EAAO4D,OACvBV,EAAaW,KAAKC,KAAK9D,EAAO4D,MAAQlB,IAfzC,2CAAD,yDAiBD,CAACV,EAAaU,EAAaR,EAAYW,EAAOF,IAE1C,CAAE/C,EAAMmD,EAAcE,GEFYc,CAAa/B,EAAaU,EAAaR,EAAYM,EAAeG,GAVtF,mBAUdqB,EAVc,KAUPjB,EAVO,KAUOE,EAVP,KAwCrB,SAASgB,IACLpF,QAAQC,IAAI,eACZ8D,EAAmBiB,KAAKK,UAG5B,OAjCAZ,qBAAU,YACN,uCAAC,sBAAAC,EAAA,sDJUE/D,IAAMC,IADE,yBAEVC,MAAK,SAAAC,GAAa,OAAOA,EAASC,QIVlBF,MAAK,SAACE,GAEfA,EAAKuE,KAAK,CACN/D,IAAI,EACJgE,KAAM,6BAEV7B,EAAW3C,MAPlB,2CAAD,yDAUD,IAuBC,kBAAC,IAAD,KACI,kBAAC,IAAD,KACA,wBAAIoB,UAAU,QAAd,eACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMqD,GAAG,KACL,kBAAC,IAAD,CAAarD,UAAW,QACpB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASM,QA3BrC,WACImB,GAAiB,GACjBN,EAAcC,IAyBiDT,KAAK,SAAS2C,MAAM,WAAU,kBAAC,IAAD,CAAOF,KAAK,yBAAjF,YAEJ,kBAAC,IAAD,CAAQG,YAAY,oBAAoBC,SAnBhE,SAA4BC,GACxBpC,EAAaoC,EAAEC,OAAOvE,QAkBoEA,MAAOiC,MAGrF,kBAAC,IAAD,CAAMiC,GAAG,MACT,kBAAC,IAAD,CAAMA,GAAG,KACL,kBAAC,IAAD,CAAYM,KAAG,GACX,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAAC,IAAD,CAAQC,QAAQ,cAAc7D,UAAU,QAAxC,UAEJ,kBAAC,IAAD,CAAM8D,GAAG,KAAKF,GAAG,KACb,kBAAC,IAAD,CAASG,QAAM,EAACX,KAAK,cAAchE,GAAG,cAAcoE,SAlChF,SAAyBC,GACrBpC,EAAa,IACbI,EAAiBuC,SAASP,EAAEC,OAAOvE,SAgCoEA,MAAOqC,GACjFF,EAAQrC,KAAI,SAAC4C,GACV,OAAO,4BAAQ1C,MAAO0C,EAAMzC,GAAIhB,IAAKyD,EAAMzC,IAAKyC,EAAMuB,cAQ9E,kBAAC,IAAD,KAEKJ,EAAM/D,KAAI,SAACY,GACR,OAAO,kBAAC,IAAD,CAAMiE,GAAG,KAAKT,GAAG,IAAIO,GAAG,IAAIxF,IAAKyB,EAAKT,IACzC,kBAAC,EAAD,CAAUS,KAAMA,EAAMa,QAASuC,SAK3C,kBAAC,IAAD,CAAS3C,QAAS2D,KAAlB,UACA,kBAAC,IAAD,CACIC,WAAYlD,EACZmD,MAAOlC,EACPmC,mBAAoBnD,IACxB,8BAAOc,EAAe,e,kBCzFvBsC,EAnBK,SAAC5E,GACjB,IACQ6E,EAA2C7E,EAA3C6E,QAASC,EAAkC9E,EAAlC8E,SAAUC,EAAwB/E,EAAxB+E,UAFA,GAGXC,EADmChF,EAAbgF,YAC/BtF,EAHoB,oBAIrBuF,EAHS,GAGOJ,EAAQK,QAAQxF,GAEtC,OACI,kBAAC,IAAD,CACIyF,OAAQJ,EACRK,UAAWN,EAASrE,OACpB4E,SATO,GAUPC,oBAAqBL,IAEpB,gBAAGM,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OAAsB,yBAAKA,MAAOA,GAAQV,EAASS,QC4JjDE,EAxJQ,SAACzF,GACpB,IAAMlC,EAAS4H,cADe,EAgBMpE,mBAdlB,CACdjB,MAAO,GACPsF,WAAY,GACZC,KAAM,GACNC,WAAY,GACZC,SAAU,GACVpB,MAAO,GACPqB,UAAW,GACXC,eAAgB,GAChBC,OAAQ,GACRC,gBAAiB,GACjBC,MAAO,GACPC,SAAU,KAdgB,mBAgBvBC,EAhBuB,KAgBXC,EAhBW,OAiBAhF,mBAAS,IAjBT,mBAiBvBiF,EAjBuB,KAiBdC,EAjBc,OAkBgBlF,mBAAS,IAlBzB,mBAkBvBmF,EAlBuB,KAkBNC,EAlBM,KAyC9B,SAASC,EAAkB3C,GACvB,IAAM4C,EAAQ5C,EAAEC,OAAOtE,GACjBD,EAAQsE,EAAEC,OAAOvE,MACnBmH,EAASC,KAAKC,MAAMD,KAAKE,UAAUX,IACvCQ,EAAOD,GAASlH,EAChB4G,EAAcO,GAsBlB,OAhDAhE,qBAAU,YACN,uCAAC,sCAAAC,EAAA,0DACOhF,EAAO6B,GADd,iCAE0CsH,QAAQC,IAAI,CAAC5H,IAAcF,EAAQtB,EAAO6B,MAFpF,mCAEYwH,EAFZ,KAEwBC,EAFxB,KAGOd,EAAcc,GACdZ,EAAWW,GACLE,EAA0BF,EAAWzG,QAAO,SAAC4G,GAC/C,OAAOF,EAAS3H,OAAO8H,SAASD,EAAO3H,OAE3C+G,EAAmBW,GAR1B,yCAUgC/H,IAVhC,QAUa6H,EAVb,OAWOX,EAAWW,GAXlB,4CAAD,yDAcD,CAACrJ,IAkCA,oCACA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,wBAAIyC,UAAU,QAAd,eACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ6D,QAAQ,SAAhB,WACA,kBAAC,IAAD,CACIoD,WAAY,CAAEC,SAAU7C,GACxBb,SAxCpB,SAA8B2D,GAC1BhB,EAAmBgB,IAwCHhI,MAAO+G,EACP5B,QAAS0B,EACToB,SAAS,KAEjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQvD,QAAQ,SAAhB,SACA,kBAAC,IAAD,CAAQzE,GAAG,QAAQmE,YAAY,aAAaC,SAAU4C,EAAmBjH,MAAO2G,EAAWhG,OAAS,MAExG,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ+D,QAAQ,cAAhB,eACA,kBAAC,IAAD,CAAQzE,GAAG,aAAamE,YAAY,cAAcC,SAAU4C,EAAmBjH,MAAO2G,EAAWV,YAAc,MAEnH,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQvB,QAAQ,QAAhB,QACA,kBAAC,IAAD,CAAQzE,GAAG,OAAOmE,YAAY,oBAAoBC,SAAU4C,EAAmBjH,MAAO2G,EAAWT,MAAQ,MAE7G,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQxB,QAAQ,cAAhB,eACA,kBAAC,IAAD,CAAQzE,GAAG,aAAamE,YAAY,GAAGC,SAAU4C,EAAmBjH,MAAO2G,EAAWR,YAAc,MAExG,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQzB,QAAQ,YAAhB,YACA,kBAAC,IAAD,CAAQzE,GAAG,WAAWmE,YAAY,KAAKC,SAAU4C,EAAmBjH,MAAO2G,EAAWP,UAAY,MAEtG,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ1B,QAAQ,SAAhB,SACA,kBAAC,IAAD,CAAQzE,GAAG,QAAQmE,YAAY,GAAGC,SAAU4C,EAAmBjH,MAAO2G,EAAW3B,OAAS,MAE9F,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQN,QAAQ,aAAhB,aACA,kBAAC,IAAD,CAAQzE,GAAG,YAAYmE,YAAY,GAAGC,SAAU4C,EAAmBjH,MAAO2G,EAAWN,WAAa,MAEtG,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ3B,QAAQ,kBAAhB,mBACA,kBAAC,IAAD,CAAQzE,GAAG,iBAAiBmE,YAAY,GAAGC,SAAU4C,EAAmBjH,MAAO2G,EAAWL,gBAAkB,MAEhH,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ5B,QAAQ,UAAhB,UACA,kBAAC,IAAD,CAAQzE,GAAG,SAASmE,YAAY,GAAGC,SAAU4C,EAAmBjH,MAAO2G,EAAWJ,QAAU,MAEhG,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ7B,QAAQ,mBAAhB,oBACA,kBAAC,IAAD,CAAQzE,GAAG,kBAAkBmE,YAAY,GAAGC,SAAU4C,EAAmBjH,MAAO2G,EAAWH,iBAAmB,MAElH,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ9B,QAAQ,SAAhB,SACA,kBAAC,IAAD,CAAQzE,GAAG,QAAQmE,YAAY,GAAGC,SAAU4C,EAAmBjH,MAAO2G,EAAWF,OAAS,MAE9F,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ/B,QAAQ,YAAhB,YACA,kBAAC,IAAD,CACIT,KAAK,WACLhE,GAAG,WACHiI,KAAK,KACL9D,YAAY,aAAaC,SAAU4C,EAAmBjH,MAAO2G,EAAWD,UAAY,QAIpG,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,0BAAM7F,UAAU,QACZ,kBAAC,IAAD,CAASW,KAAK,SAAS2G,KAAK,KAAKhE,MAAM,UAAWhD,QA1FlE,WACIwF,EAAW5G,OAASgH,EAAgBjH,KAAI,SAACsI,GACrC,OAAOA,EAAKnJ,OAEbb,EAAO6B,GNjDlB,SAAoBS,GAChB,IAAIrC,EAAW,sBAAwBqC,EAAKT,GAAK,IAC3CoI,EAAOjB,KAAKE,UAAU5G,GAC5B,OAAOrB,IAAMiJ,IAAIjK,EAAUgK,GACtB9I,MAAK,SAAAC,GAAa,OAAOA,EAASC,QM8C/B8I,CAAW5B,GAAYpH,MAAK,SAACiJ,GACzB9J,QAAQC,IAAI6J,MN1D5B,SAAoB9H,GAChB,IACM2H,EAAOjB,KAAKE,UAAU5G,GAC5B,OAAOrB,IAAMgC,KAFI,sBAEWgH,GACvB9I,MAAK,SAAAC,GAAa,OAAOA,EAASC,QMyD/BgJ,CAAW9B,GAAYpH,MAAK,SAACiJ,GACzB9J,QAAQC,IAAI6J,QAiFJ,kBAAC,IAAD,CAAOvE,KAAK,iBADhB,YAIJ,kBAAC,IAAD,CAASzC,KAAK,QAAQ2G,KAAK,KAAKhE,MAAM,SAAShD,QA/E3D,WACIzC,QAAQC,IAAI,UA+EA,kBAAC,IAAD,CAAOsF,KAAK,YADhB,cCjKVyE,EAAS,CACXC,OAAQ,EACRC,IAAK,MACLC,MAAO,MACPC,WAAY,GACZC,aAAc,IAgBHC,EAbC,WACZ,IAAMC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,WAG3C,OAFAvK,QAAQC,IAAIsK,GAEL,oCACFA,EAAU,GACP,yBAAKpI,UAAU,qDAAqDiF,MAAO4C,EAAQU,KAAK,UACpF,0BAAMvI,UAAU,WAAhB,iBCkBDwI,EA1BD,SAAC/I,GACX,IAAMgJ,EAASJ,aAAY,SAAAC,GAAK,OAAIA,EAAMG,UAG1C,OAFA5K,QAAQC,IAAI2K,GAGR,oCACI,kBAAC,IAAD,CAAUC,SAAS,gBACdD,EAAOxJ,KAAI,SAAC2B,EAAOxC,GAChB,OAAO,kBAAC,IAAD,CACHA,IAAK,QAAUA,EACfuK,MAAM,EACNC,SAAU,IACVC,MAAM,GACN,kBAAC,IAAD,oBAGA,kBAAC,IAAD,KACKjI,EAAMP,e,SCXpByI,EAXa,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BAE/D,OADApL,QAAQC,IAAIiL,GAER,kBAAC,IAAD,iBAAWE,EAAX,CAAiBC,OAAQ,SAAAzJ,GAAK,OAC1B0J,cACM,kBAACJ,EAActJ,GACf,kBAAC,IAAD,CAAU2J,GAAI,CAAEC,SAAU,SAAUf,MAAO,CAAEgB,KAAM7J,EAAM9B,kBCMrE4L,EACJ,yBAAKvJ,UAAU,oBACb,yBAAKA,UAAU,iCAuBJwJ,MAAMC,MAnBF,WACjB,OACE,0BAAMzJ,UAAU,UACd,kBAAC,IAAD,CAAY0J,OAAK,GACf,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,WAAD,CAAUC,SAAUJ,GAClB,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAcK,OAAK,EAACC,KAAK,cAAczG,KAAK,cAAc4F,UAAWlI,IACrE,kBAAC,EAAD,CAAc8I,OAAK,EAACC,KAAK,QAAQzG,KAAK,cAAc4F,UAAW9D,IAC/D,kBAAC,EAAD,CAAc0E,OAAK,EAACC,KAAK,gBAAgBzG,KAAK,cAAc4F,UAAW9D,IACvE,kBAAC,IAAD,CAAUoE,KAAK,IAAIF,GAAG,uBCfnBI,MAAMC,MAfH,WAChB,OACE,kBAAC,IAAD,CAASK,OAAO,GACd,6BACE,uBAAGC,KAAK,oBAAoBrG,OAAO,SAASsG,IAAI,uBAAhD,UACA,0BAAMhK,UAAU,QAAhB,4BAEF,yBAAKA,UAAU,YACb,0BAAMA,UAAU,QAAhB,cACA,uBAAG+J,KAAK,0BAA0BrG,OAAO,SAASsG,IAAI,uBAAtD,yBCgDOC,EA1CG,WACd,IAAMvK,EAAWC,cACXuK,EAAc7B,aAAY,SAAAC,GAAK,OAAIA,EAAM4B,eACzCC,EAAO9B,aAAY,SAAAC,GAAK,OAAIA,EAAM6B,QAYxC,OACI,kBAAC,IAAD,CAASC,eAAa,GAClB,kBAAC,IAAD,CACIC,UAAQ,EACRrK,UAAU,oBACVM,QAVgB,WACxB,IAAMgK,IAAM,EAAC,EAAO,cAActD,SAASkD,IAAsB,aACjExK,EAAS,CAACiB,KAAM,MAAOuJ,YAAaI,OAUhC,kBAAC,IAAD,CACID,UAAQ,EACRrK,UAAU,sBACVM,QApBU,WAClB,IAAMgK,GAAM,EAAC,EAAM,cAActD,SAASkD,IAAuB,aACjExK,EAAS,CAACiB,KAAM,MAAOuJ,YAAaI,OAoBhC,kBAAC,IAAD,CAActK,UAAU,oBAAoBoJ,GAAG,KAC3C,kBAAC,IAAD,CAAOhG,KAAK,OAAOwB,OAAO,KAAK2F,IAAI,UAGvC,kBAAC,IAAD,CAAYvK,UAAU,2BAIrBmK,GAAQA,EAAKK,OACV,kBAAC,IAAD,CAAYxK,UAAU,QAAQmK,EAAKK,S,2BCoBpChB,MAAMC,MApDF,WACf,IAAM/J,EAAWC,cACXgJ,EAAON,aAAY,SAAAC,GAAK,OAAIA,EAAM4B,eACpCO,EAAUC,cASd,OACI,kBAAC,IAAD,CACA/B,KAAMA,EACNgC,aAAc,SAACL,GAAD,OAAS5K,EAAS,CAACiB,KAAM,MAAOuJ,YAAaI,MAE3D,kBAAC,IAAD,CAAetK,UAAU,uBAAuBoJ,GAAG,KAW/C,kBAAC,IAAD,CACIwB,IAAKC,IACL7K,UAAU,4BACVuK,IAAI,+BAEZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAiBnH,KAAK,SAASgG,GAAG,cAAc0B,KAAK,eACrD,kBAAC,IAAD,CAAiB1H,KAAK,OAAOgG,GAAG,QAAQ0B,KAAK,aAC7C,kBAAC,IAAD,CAAiB1H,KAAK,SAAS9C,QA/BvC,WACIyK,cAASrM,MAAK,SAACiJ,GACX9J,QAAQC,IAAI6J,GACZ8C,EAAQtH,KAAK,aACd,SAAC6H,GAASnN,QAAQC,IAAIkN,OA2BkCF,KAAK,wBAWhE,kBAAC,IAAD,CAAmB9K,UAAU,yBC7CtBiL,UAhBG,WAEhB,OACE,yBAAKjL,UAAU,0BACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,UACb,kBAAC,EAAD,OAEF,kBAAC,EAAD","file":"static/js/5.8b95ed02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/karmela.41a4104d.png\";","import { buildParams } from './helpers'\nimport axios from 'axios';\n\n\nfunction getBooks(params) {\n    let endpoint = '/catalog/api/books/';\n    endpoint = buildParams(endpoint, params);\n    return axios.get(endpoint)\n        .then(response => {return response.data})\n}\n\nfunction getBook(bookId) {\n    let endpoint = '/catalog/api/books/' + bookId;\n    return axios.get(endpoint)\n        .then(response => {return response.data})\n}\n\nfunction createBook(book) {\n    const endpoint = '/catalog/api/books/';\n    const body = JSON.stringify(book);\n    return axios.post(endpoint, body)\n        .then(response => {return response.data})\n}\n\nfunction updateBook(book) {\n    let endpoint = '/catalog/api/books/' + book.id + '/';\n    const body = JSON.stringify(book);\n    return axios.put(endpoint, body)\n        .then(response => {return response.data})\n}\n\nfunction getAuthors() {\n    let endpoint = '/catalog/api/authors/';\n    return axios.get(endpoint)\n        .then(response => {return response.data})\n        .then((result) => result.map((author) => { // add the fields needed for the select component\n            author.value = author.id;\n            author.key = author.id;\n            author.label = author.first_name + ' ' + author.last_name;\n            return author;\n        }));\n}\n\nfunction getShelves() {\n    let endpoint = '/catalog/api/shelves/';\n    return axios.get(endpoint)\n        .then(response => {return response.data})\n}\n\nfunction checkoutBook(bookInstanceId) {\n    let endpoint = '/catalog/api/copies/' + bookInstanceId + '/checkout/';\n    return axios.post(endpoint)\n        .then(response => {return response.data})\n}\n\nfunction reserveBook(bookInstanceId) {\n    let endpoint = '/catalog/api/copies/' + bookInstanceId + '/reserve/';\n    return axios.post(endpoint)\n        .then(response => {return response.data})\n}\n\nexport {\n    getBooks,\n    createBook,\n    getAuthors,\n    getBook,\n    updateBook,\n    getShelves,\n    checkoutBook,\n    reserveBook\n}","function buildParams(endpoint, params) {\n    const url = window.location.origin + endpoint;\n    console.log(url);\n    let builtUrl = new URL(url);\n    Object.keys(params).forEach((key) => {\n        builtUrl.searchParams.append(key, params[key])\n    });\n    return builtUrl;\n}\n\nexport {\n    buildParams\n}","import { getBooks } from './book.service';\nimport { useState, useEffect } from 'react';\n\nconst useBookFetch = (currentPage, rowsPerPage, searchTerm, shelf, bookListUpdated) => {\n    const [data, setData] = useState([]);\n    const [totalResults, setTotalResults] = useState(0);\n    const [pageCount, setPageCount] = useState(1);\n\n    function makePretty(book) {\n        const authorNames = book.author_names.join(', ');\n        book.authorNames = authorNames;\n        return book;\n    }\n\n    useEffect(() => {\n        (async function fetchData() {\n            const params = {\n                limit: rowsPerPage,\n                offset: (rowsPerPage * currentPage) - rowsPerPage\n            }\n            // Add either the shelf or search parameter not both\n            // shelf has to be null for string search to work\n            if (!shelf) {\n                params.search = searchTerm;\n            } else {\n                params.shelf = shelf\n            }\n            const result = await getBooks(params)\n            setData(result.results.map(makePretty));\n            setTotalResults(result.count);\n            setPageCount(Math.ceil(result.count / rowsPerPage))\n        })();\n    }, [currentPage, rowsPerPage, searchTerm, shelf, bookListUpdated]); // Dependency array. API call will be re-triggered on any change\n\n    return [ data, totalResults, pageCount ];\n};\n\nexport {\n    useBookFetch\n}","import React from 'react';\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCardFooter,\n    CLink,\n} from '@coreui/react'\nimport { checkoutBook, reserveBook } from './../../services/book.service';\nimport { useDispatch } from 'react-redux'\n\nconst BookCard = (props) => {\n    const dispatch = useDispatch()\n\n    function checkoutClicked() {\n        const bookInstanceId = props.book.copies[0].id;\n        checkoutBook(bookInstanceId).then((data) => {\n            props.updated();\n            const newState = dispatch({type: 'add-toast', toast: data})\n        });\n    }\n\n    function reserveClicked() {\n        const bookInstanceId = props.book.copies[0].id;\n        reserveBook(bookInstanceId).then((data) => {\n            console.log(data);\n            props.updated();\n            const newState = dispatch({type: 'add-toast', toast: data})\n        });\n    }\n\n    function getCopiesCount() {\n        return props.book.copies.length;\n    }\n\n    function getAvailableCount() {\n        return props.book.copies.filter(copy => copy.status === 'Available').length;\n    }\n\n    return (\n        <CCard accentColor=\"primary\">\n            <CCardHeader>\n                <h5>{props.book.title}</h5>\n            </CCardHeader>\n            <CCardBody>\n                {props.book.author_names}\n            </CCardBody>\n            <CCardFooter>                \n                <div className=\"d-flex justify-content-between\">\n                    <div>\n                        <div>Copies: {getCopiesCount()}</div>\n                        <div>Available: {getAvailableCount()}</div>\n                    </div>\n                    <div>\n                        <div><CLink onClick={checkoutClicked}>Checkout</CLink></div>\n                        <div><CLink onClick={reserveClicked}>Reserve</CLink></div>\n                    </div>\n                </div> \n            </CCardFooter>\n        </CCard>\n    )\n}\n\nexport default BookCard","import React, { useState, useEffect } from 'react'\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CRow,\n    CPagination,\n    CInput,\n    CInputGroup,\n    CInputGroupPrepend,\n    CButton,\n    CFormGroup,\n    CLabel,\n    CSelect\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { useBookFetch } from './../../services/useBookFetch';\nimport { getShelves } from './../../services/book.service'\nimport BookCard from './BookCard';\nimport { logUserOut } from './../../services/auth.service';\n\nconst BookSearch = () => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchTerm, setSearchTerm] = useState(''); // search term that goes to back end\n    const [inputText, setInputText] = useState(''); // text in the search input\n    const [shelves, setShelves] = useState([]);\n    const [selectedShelf, setSelectedShelf] = useState(false);\n    const [rowsPerPage, setRowsPerPage] = useState(20);\n    const [bookListUpdated, setBookListUpdated] = useState(null) // used to trigger another book search api call when user does checkout, checkin or reserve\n\n    // API call to get books. Re-triggered when any of the arguments changes\n    const [books, totalResults, pageCount] = useBookFetch(currentPage, rowsPerPage, searchTerm, selectedShelf, bookListUpdated)\n\n    useEffect(() => {\n        (async function fetchShelves(){\n            getShelves().then((data) => {\n                // add blank option\n                data.push({\n                    id: false,\n                    name: ' -- select an option -- '\n                })\n                setShelves(data);\n            });\n        })();\n    }, []);\n\n\n    function searchButtonClicked() {\n        setSelectedShelf(false)\n        setSearchTerm(inputText);\n    }\n\n    function onShelfSelected(e) {\n        setInputText('');\n        setSelectedShelf(parseInt(e.target.value))\n    }\n\n    function onSearchTextChange(e) {\n        setInputText(e.target.value);\n    }\n\n    function onBookUpdated(){\n        console.log('bookupdated');\n        setBookListUpdated(Math.random());\n    }\n\n    return (\n        <CRow>\n            <CCol>\n            <h2 className='mb-4'>Book Search</h2>\n                <CRow>\n                    <CCol sm='4'>\n                        <CInputGroup className={'mb-4'}>\n                            <CInputGroupPrepend>\n                                <CButton onClick={searchButtonClicked} type=\"button\" color=\"primary\"><CIcon name=\"cil-magnifying-glass\" /> Search</CButton>\n                            </CInputGroupPrepend>\n                            <CInput placeholder=\"Title or abstract\" onChange={onSearchTextChange} value={inputText}/>\n                        </CInputGroup>\n                    </CCol>\n                    <CCol sm='4'></CCol>\n                    <CCol sm='4'>\n                        <CFormGroup row>\n                            <CCol md=\"3\">\n                                <CLabel htmlFor=\"shelfSelect\" className='pt-1'>Shelf</CLabel>\n                            </CCol>\n                            <CCol xs=\"12\" md=\"9\">\n                                <CSelect custom name=\"shelfSelect\" id=\"shelfSelect\" onChange={onShelfSelected} value={selectedShelf}>\n                                    {shelves.map((shelf) => {\n                                        return <option value={shelf.id} key={shelf.id}>{shelf.name}</option>\n                                    })}\n                                </CSelect>\n                            </CCol>\n                        </CFormGroup>\n                    </CCol>\n                </CRow>\n\n                <CRow>\n                    \n                    {books.map((book) => {\n                        return <CCol xs=\"12\" sm=\"6\" md=\"4\" key={book.id} >\n                            <BookCard book={book} updated={onBookUpdated}></BookCard>\n                        </CCol>\n                    })}\n\n                </CRow>\n                <CButton onClick={logUserOut}>logout</CButton>\n                <CPagination\n                    activePage={currentPage}\n                    pages={pageCount}\n                    onActivePageChange={setCurrentPage} />\n                <span>{totalResults + ' results'}</span>\n            </CCol>\n        </CRow>\n    )\n}\n\nexport default BookSearch\n","import React from 'react'\nimport { FixedSizeList as List } from \"react-window\";\n\nconst AuthorList =  (props) => {\n    const height = 35; // ??\n    const { options, children, maxHeight, getValue } = props;\n    const [value] = getValue();\n    const initialOffset = options.indexOf(value) * height;\n\n    return (\n        <List\n            height={maxHeight}\n            itemCount={children.length}\n            itemSize={height}\n            initialScrollOffset={initialOffset}>\n\n            {({ index, style }) => <div style={style}>{children[index]}</div>}\n\n        </List>\n    );\n}\n\nexport default AuthorList;","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport Select from 'react-select';\nimport AuthorList from './AuthorList';\nimport {\n    CFormGroup,\n    CLabel,\n    CTextarea,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CRow,\n    CInput,\n    CCardFooter,\n    CButton,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { createBook, updateBook, getAuthors, getBook } from '../../services/book.service';\n\nconst BookEditCreate = (props) => {\n    const params = useParams();\n    const emptyBook = {\n        title: '',\n        titleShort: '',\n        isbn: '',\n        callNumber: '',\n        language: '',\n        pages: '',\n        publisher: '',\n        publisherPlace: '',\n        issued: '',\n        collectionTitle: '',\n        place: '',\n        abstract: ''\n    }\n    const [bookFields, setBookFields] = useState(emptyBook);\n    const [authors, setAuthors] = useState([]);\n    const [selectedAuthors, setSelectedAuthors] = useState([]);\n\n    useEffect(() => {\n        (async function getData(){\n            if (params.id) {\n                let [authorData, bookData] = await Promise.all([getAuthors(), getBook(params.id)]);\n                setBookFields(bookData);\n                setAuthors(authorData);\n                const originalSelectedAuthors = authorData.filter((myAuth) => {\n                    return bookData.author.includes(myAuth.id);\n                })\n                setSelectedAuthors(originalSelectedAuthors);\n            } else {\n                const authorData = await getAuthors();\n                setAuthors(authorData);\n            }\n        })();\n    }, [params]);\n\n    function onAuthorSelectChange(newSelected) {\n        setSelectedAuthors(newSelected);\n    }\n\n    function onFormInputChange(e) {\n        const field = e.target.id;\n        const value = e.target.value;\n        let myBook = JSON.parse(JSON.stringify(bookFields))\n        myBook[field] = value;\n        setBookFields(myBook);\n    }\n\n    function bookSubmitClicked() {\n        bookFields.author = selectedAuthors.map((auth) => {\n            return auth.key;\n        });\n        if(params.id) {\n            updateBook(bookFields).then((res) => {\n                console.log(res);\n            });\n        } else {\n            createBook(bookFields).then((res) => {\n                console.log(res);\n            })\n        }\n    }\n\n    function test() {\n        console.log('test')\n    }\n\n    return (\n        <>\n        <CRow>\n            <CCol>\n                <h2 className='mb-4'>Create Book</h2>\n                <CFormGroup>\n                    <CLabel htmlFor=\"title\">Authors</CLabel>\n                    <Select\n                        components={{ MenuList: AuthorList }}\n                        onChange={onAuthorSelectChange}\n                        value={selectedAuthors}\n                        options={authors}\n                        isMulti={true}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"title\">Title</CLabel>\n                    <CInput id=\"title\" placeholder=\"Book title\" onChange={onFormInputChange} value={bookFields.title || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"titleShort\">Short Title</CLabel>\n                    <CInput id=\"titleShort\" placeholder=\"Short title\" onChange={onFormInputChange} value={bookFields.titleShort || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"isbn\">ISBN</CLabel>\n                    <CInput id=\"isbn\" placeholder=\"978-1-86197-876-9\" onChange={onFormInputChange} value={bookFields.isbn || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"callNumber\">Call Number</CLabel>\n                    <CInput id=\"callNumber\" placeholder=\"\" onChange={onFormInputChange} value={bookFields.callNumber || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"language\">Language</CLabel>\n                    <CInput id=\"language\" placeholder=\"es\" onChange={onFormInputChange} value={bookFields.language || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"pages\">Pages</CLabel>\n                    <CInput id=\"pages\" placeholder=\"\" onChange={onFormInputChange} value={bookFields.pages || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"publisher\">Publisher</CLabel>\n                    <CInput id=\"publisher\" placeholder=\"\" onChange={onFormInputChange} value={bookFields.publisher || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"publisherPlace\">Publisher Place</CLabel>\n                    <CInput id=\"publisherPlace\" placeholder=\"\" onChange={onFormInputChange} value={bookFields.publisherPlace || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"issued\">Issued</CLabel>\n                    <CInput id=\"issued\" placeholder=\"\" onChange={onFormInputChange} value={bookFields.issued || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"collectionTitle\">Collection Title</CLabel>\n                    <CInput id=\"collectionTitle\" placeholder=\"\" onChange={onFormInputChange} value={bookFields.collectionTitle || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"place\">Place</CLabel>\n                    <CInput id=\"place\" placeholder=\"\" onChange={onFormInputChange} value={bookFields.place || ''}/>\n                </CFormGroup>\n                <CFormGroup>\n                    <CLabel htmlFor=\"abstract\">Abstract</CLabel>\n                    <CTextarea \n                        name=\"abstract\" \n                        id=\"abstract\" \n                        rows=\"10\"\n                        placeholder=\"Content...\" onChange={onFormInputChange} value={bookFields.abstract || ''}/>\n                </CFormGroup>\n            </CCol>\n        </CRow>\n        <CRow>\n            <CCol>\n                <span className='mr-2'>\n                    <CButton type=\"submit\" size=\"sm\" color=\"primary\"  onClick={bookSubmitClicked}>\n                        <CIcon name=\"cil-scrubber\"/> Submit\n                    </CButton>\n                </span>\n                <CButton type=\"reset\" size=\"sm\" color=\"danger\" onClick={test}>\n                    <CIcon name=\"cil-ban\"/> Reset\n                </CButton>\n            </CCol>\n        </CRow>\n        </>\n    )\n}\n\nexport default BookEditCreate\n","import React from 'react';\nimport { useSelector } from 'react-redux'\nconst styles = {\n    zIndex: 9,\n    top: '50%',\n    right: '50%',\n    marginTop: -16,\n    marginRight: -16\n}\n\nconst Spinner = () => {\n    const spinner = useSelector(state => state.spinner)\n    console.log(spinner)\n\n    return <>\n        {spinner > 0 &&\n            <div className=\"spinner-border text-primary position-fixed d-block\" style={styles} role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        }\n    </>\n}\n\nexport default Spinner;","import React from 'react';\nimport {\n    CToaster,\n    CToast,\n    CToastHeader,\n    CToastBody\n} from '@coreui/react';\nimport { useSelector } from 'react-redux'\n\nconst Toast = (props) => {\n    const toasts = useSelector(state => state.toasts)\n    console.log(toasts)\n\n    return (\n        <>\n            <CToaster position='bottom-right'>\n                {toasts.map((toast, key) => {\n                    return <CToast\n                        key={'toast' + key}\n                        show={true}\n                        autohide={5000}\n                        fade={true}>\n                        <CToastHeader >\n                            Toast title\n                        </CToastHeader>\n                        <CToastBody>\n                            {toast.status}\n                        </CToastBody>\n                    </CToast>\n                })}\n            </CToaster>\n        </>\n    )\n}\n\nexport default Toast;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLoggedIn } from './../../services/auth.service';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n    console.log(Component)\n    return (\n        <Route {...rest} render={props => (\n            isLoggedIn()\n                ? <Component {...props} />\n                : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )} />\n    )\n}\n\nexport default PrivateRoute","import React, { Suspense } from 'react'\nimport {\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { CContainer, CFade } from '@coreui/react'\nimport BookSearch from './../views/books/BookSearch';\nimport BookEditCreate from './../views/books/BookEditCreate'\n\n// routes config\n// import routes from '../routes'\nimport Spinner from './Spinner';\nimport Toast from './Toast';\nimport PrivateRoute from './../views/books/PrivateRoute';\n  \nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\nconst TheContent = () => {\n  return (\n    <main className=\"c-main\">\n      <CContainer fluid>\n        <Toast></Toast>\n        <Spinner></Spinner>\n        <Suspense fallback={loading}>\n          <Switch>\n            <PrivateRoute exact path=\"/bookSearch\" name=\"Book Search\" component={BookSearch} />\n            <PrivateRoute exact path=\"/book\" name=\"Book Create\" component={BookEditCreate} />\n            <PrivateRoute exact path=\"/bookEdit/:id\" name=\"Book Detail\" component={BookEditCreate} />\n            <Redirect from=\"/\" to=\"/bookSearch\" />\n          </Switch>\n        </Suspense>\n      </CContainer>\n    </main>\n  )\n}\n\nexport default React.memo(TheContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst TheFooter = () => {\n  return (\n    <CFooter fixed={false}>\n      <div>\n        <a href=\"https://coreui.io\" target=\"_blank\" rel=\"noopener noreferrer\">CoreUI</a>\n        <span className=\"ml-1\">&copy; 2020 creativeLabs.</span>\n      </div>\n      <div className=\"mfs-auto\">\n        <span className=\"mr-1\">Powered by</span>\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">CoreUI for React</a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(TheFooter)\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CHeader,\n  CToggler,\n  CHeaderBrand,\n  CHeaderNav\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\n\nimport { \n  TheHeaderDropdown,\n  TheHeaderDropdownMssg,\n  TheHeaderDropdownNotif,\n  TheHeaderDropdownTasks\n}  from './index'\n\nconst TheHeader = () => {\n    const dispatch = useDispatch()\n    const sidebarShow = useSelector(state => state.sidebarShow)\n    const user = useSelector(state => state.user)\n\n    const toggleSidebar = () => {\n        const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\n        dispatch({type: 'set', sidebarShow: val})\n    }\n\n    const toggleSidebarMobile = () => {\n        const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\n        dispatch({type: 'set', sidebarShow: val})\n    }\n\n    return (\n        <CHeader withSubheader>\n            <CToggler\n                inHeader\n                className=\"ml-md-3 d-lg-none\"\n                onClick={toggleSidebarMobile}\n            />\n            <CToggler\n                inHeader\n                className=\"ml-3 d-md-down-none\"\n                onClick={toggleSidebar}\n            />\n            <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\n                <CIcon name=\"logo\" height=\"48\" alt=\"Logo\"/>\n            </CHeaderBrand>\n\n            <CHeaderNav className=\"d-md-down-none mr-auto\">\n\n            </CHeaderNav>\n\n            {user && user.email && \n                <CHeaderNav className=\"mr-5\">{user.email}</CHeaderNav>}\n            \n        </CHeader>\n    )\n}\n\nexport default TheHeader\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CSidebarMinimizer,\n  CSidebarNavDropdown,\n  CSidebarNavItem,\n  CImg\n} from '@coreui/react'\n\nimport logo from './../assets/karmela.png'\nimport { logout } from './../services/login.service';\nimport { useHistory } from \"react-router-dom\";\n\n// sidebar nav config\nimport navigation from './_nav'\n\nconst TheSidebar = () => {\n    const dispatch = useDispatch()\n    const show = useSelector(state => state.sidebarShow)\n    let history = useHistory();\n\n    function logoutClicked(){\n        logout().then((res) => {\n            console.log(res);\n            history.push('/login');\n        }, (err) => {console.log(err)});\n    }\n\n    return (\n        <CSidebar\n        show={show}\n        onShowChange={(val) => dispatch({type: 'set', sidebarShow: val })}\n        >\n        <CSidebarBrand className=\"d-md-down-none white\" to=\"/\">\n            {/* <CIcon\n            className=\"c-sidebar-brand-full\"\n            name=\"logo-negative\"\n            height={35}\n            />\n            <CIcon\n            className=\"c-sidebar-brand-minimized\"\n            name=\"sygnet\"\n            height={35}\n            /> */}\n            <CImg\n                src={logo}\n                className=\"c-sidebar-brand-full logo\"\n                alt=\"admin@bootstrapmaster.com\"/>\n        </CSidebarBrand>\n        <CSidebarNav>\n            <CSidebarNavItem name='Search' to='/bookSearch' icon='cil-search'></CSidebarNavItem>\n            <CSidebarNavItem name='Book' to='/book' icon='cil-book'></CSidebarNavItem>\n            <CSidebarNavItem name='Logout' onClick={logoutClicked} icon='cil-account-logout'></CSidebarNavItem>\n            {/* <CCreateElement\n            items={navigation}\n            components={{\n                CSidebarNavDivider,\n                CSidebarNavDropdown,\n                CSidebarNavItem,\n                CSidebarNavTitle\n            }}\n            /> */}\n        </CSidebarNav>\n        <CSidebarMinimizer className=\"c-d-md-down-none\"/>\n        </CSidebar>\n    )\n}\n\nexport default React.memo(TheSidebar)\n","import React from 'react'\nimport {\n  TheContent,\n  TheSidebar,\n  TheFooter,\n  TheHeader\n} from './index'\n\nconst TheLayout = () => {\n\n  return (\n    <div className=\"c-app c-default-layout\">\n      <TheSidebar/>\n      <div className=\"c-wrapper\">\n        <TheHeader/>\n        <div className=\"c-body\">\n          <TheContent/>\n        </div>\n        <TheFooter/>\n      </div>\n    </div>\n  )\n}\n\nexport default TheLayout\n"],"sourceRoot":""}